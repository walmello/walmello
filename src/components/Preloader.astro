<div class="preloader">
    <div class="bars">
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
    </div>
    
    <div class="dot">
    </div>
    <div class="mask">
        <span>
            0%
        </span>    
    </div>
    <div class="logo">
        <span>wm</span>
        <span>design</span>
    </div>
</div>

<style lang="scss">
    .dot {
        width: 1rem;
        height: 1rem;
        background-color: var(--main-color);
        position: absolute;
        overflow: hidden;
        top: 0;
        border-radius: 10000000000%;
        opacity: 0;
    }
    
    .logo {
        position: absolute;
        opacity: 0;
    }
    
    .preloader {
        background-color: var(--black);
        position: fixed;
        left: 0;        
        top: 0;
        height: 100vh;
        width: 100vw;
        z-index: 999999;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: max(12vw, 10rem);
        font-weight: 600;
        
        .mask {
            display: flex;
            overflow: hidden;
            span {
                opacity: 0.2;
                transform: translateY(100%);
                --percent: 0;
                
                color: transparent;
                background-clip: text;
                background: linear-gradient(0deg,var(--white) 0%, var(--white) calc(var(--percent) * 1%), var(--black) calc(var(--percent) * 1%), var(--black) calc(var(--percent) * 1%)); 
                background-clip: text;
                -webkit-background-clip: text;
                
                -webkit-text-stroke: 2px var(--white);
                text-stroke: 2px var(--white);
            }
        }
    }
</style>

<script is:inline>
    const percent = document.querySelector('.preloader span')
    
    const interval = setInterval(() => {
        const value = getComputedStyle(percent).getPropertyValue('--percent')
        if(value <= 100){
            percent.style.setProperty('--percent', parseInt(value) + 4)
            percent.innerText = value + "%"
        } else {
            clearInterval(interval);
        }
    }, 100)
    
</script>

<script>
    import { gsap } from 'gsap'
    gsap.to('.preloader span', {y: 0, opacity: 1})
    
    const tl = gsap.timeline()
    
    setTimeout(() => {
        tl.to('.preloader span', {yPercent: 100, opacity: 0})
        .to('.preloader .dot',{opacity: 1, top: '50%', duration: 0.8, })
        .to('.preloader .dot',{scale: 200, duration: 1})
        .to('.preloader',{scale: 0, duration: 1})
        .to('.preloader',{display: 'none'})
        .to('.logo .char', {
            stagger: 0.2,
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "back.inOut(1.7)"
        }, "-=3")
        .to('.logo .line', {
            x: '-10%'
        }).to('.logo .line', {
            x: '0%',
            ease: "back.inOut(1.7)",
            duration: 0.2
        })
        .to('nav .mask > *', {
            stagger: 0.2,
            y: 0
        }, "<")        
    }, 100 * 30)
</script>